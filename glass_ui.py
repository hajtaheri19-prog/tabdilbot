"""
üé® Glass UI Components - ÿßÿ¨ÿ≤ÿß€å ÿ±ÿßÿ®ÿ∑ ⁄©ÿßÿ±ÿ®ÿ±€å ÿ¥€åÿ¥Ÿá‚Äåÿß€å
€å⁄© ÿ≥€åÿ≥ÿ™ŸÖ Ÿæ€åÿ¥ÿ±ŸÅÿ™Ÿá ÿ®ÿ±ÿß€å ÿß€åÿ¨ÿßÿØ ⁄©€åÿ®Ÿàÿ±ÿØŸáÿß Ÿà ÿØ⁄©ŸÖŸá‚ÄåŸáÿß€å ÿ¥€åÿ¥Ÿá‚Äåÿß€å ÿ≤€åÿ®ÿß Ÿà ÿ≠ÿ±ŸÅŸá‚Äåÿß€å
"""

from telegram import (
    Update, InlineKeyboardButton, InlineKeyboardMarkup, 
    WebAppInfo, KeyboardButton, ReplyKeyboardMarkup
)
from telegram.ext import ContextTypes
from typing import Dict, List, Optional, Any, Tuple
import logging
import random

logger = logging.getLogger(__name__)

class GlassUI:
    """⁄©ŸÑÿßÿ≥ ÿßÿµŸÑ€å ÿ®ÿ±ÿß€å ÿß€åÿ¨ÿßÿØ ÿ±ÿßÿ®ÿ∑ ⁄©ÿßÿ±ÿ®ÿ±€å ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
    
    # ŸÜŸÖÿßÿØŸáÿß€å ÿ¥€åÿ¥Ÿá‚Äåÿß€å Ÿà ÿ≠ÿ±ŸÅŸá‚Äåÿß€å
    GLASS_EMOJIS = {
        "currency": "üíé", "unit": "üîÆ", "date": "‚ú®", "price": "üí´",
        "weather": "üåå", "calculator": "üßø", "translate": "üîÆ", 
        "settings": "‚ö°", "stats": "üåü", "alerts": "üí•",
        "admin": "üëë", "help": "üí°", "back": "üîô", "next": "‚û°Ô∏è",
        "prev": "‚¨ÖÔ∏è", "confirm": "‚úÖ", "cancel": "‚ùå", "info": "‚ÑπÔ∏è",
        "warning": "‚ö†Ô∏è", "error": "üö´", "success": "üéâ", "loading": "‚è≥"
    }
    
    # ÿ±ŸÜ⁄Ø‚ÄåŸáÿß€å ÿ¥€åÿ¥Ÿá‚Äåÿß€å (ÿ®ÿß ÿßÿ≥ÿ™ŸÅÿßÿØŸá ÿßÿ≤ emoji)
    GLASS_COLORS = {
        "primary": "üîµ", "secondary": "üü£", "success": "üü¢", 
        "warning": "üü°", "danger": "üî¥", "info": "üîµ", "light": "‚ö™"
    }
    
    @staticmethod
    def get_glass_button(text: str, callback_data: str = None, 
                        web_app: WebAppInfo = None, emoji: str = None) -> InlineKeyboardButton:
        """ÿß€åÿ¨ÿßÿØ ÿØ⁄©ŸÖŸá ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        if emoji:
            display_text = f"{emoji} {text}"
        else:
            display_text = text
            
        if web_app:
            return InlineKeyboardButton(display_text, web_app=web_app)
        else:
            return InlineKeyboardButton(display_text, callback_data=callback_data)
    
    @staticmethod
    def get_main_glass_keyboard() -> InlineKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ÿßÿµŸÑ€å ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        keyboard = [
            [
                GlassUI.get_glass_button(
                    "Open",
                    web_app=WebAppInfo(url="https://bot-nine-ochre.vercel.app/")
                ),
                GlassUI.get_glass_button("ÿ¥ÿ±Ÿàÿπ ŸÖÿ¨ÿØÿØ", "restart", emoji="üîÑ")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def get_currency_glass_keyboard() -> InlineKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ÿ™ÿ®ÿØ€åŸÑ ÿßÿ±ÿ≤ ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        keyboard = [
            [
                GlassUI.get_glass_button("üí± ÿ™ÿ®ÿØ€åŸÑ ÿßÿ±ÿ≤", "currency_convert", emoji="üíé"),
                GlassUI.get_glass_button("‚Çø ÿßÿ±ÿ≤ ÿØ€åÿ¨€åÿ™ÿßŸÑ", "crypto_prices", emoji="üîÆ")
            ],
            [
                GlassUI.get_glass_button("üìà ŸÜÿ±ÿÆ ÿßÿ±ÿ≤", "exchange_rates", emoji="‚ú®"),
                GlassUI.get_glass_button("üìã ŸÑ€åÿ≥ÿ™ ÿßÿ±ÿ≤Ÿáÿß", "currency_list", emoji="üí´")
            ],
            [
                GlassUI.get_glass_button("üèÜ ÿ®ÿ±ÿ™ÿ±€åŸÜ ÿßÿ±ÿ≤Ÿáÿß", "top_currencies", emoji="üåü"),
                GlassUI.get_glass_button("üìä ŸÜŸÖŸàÿØÿßÿ± ŸÇ€åŸÖÿ™", "price_chart", emoji="üí•")
            ],
            [
                GlassUI.get_glass_button("üîô ÿ®ÿßÿ≤⁄Øÿ¥ÿ™", "back_to_main", emoji="üîô")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def get_unit_glass_keyboard() -> InlineKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ÿ™ÿ®ÿØ€åŸÑ Ÿàÿßÿ≠ÿØ ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        keyboard = [
            [
                GlassUI.get_glass_button("üìè ÿ∑ŸàŸÑ", "unit_length", emoji="üîÆ"),
                GlassUI.get_glass_button("‚öñÔ∏è Ÿàÿ≤ŸÜ", "unit_weight", emoji="‚ú®")
            ],
            [
                GlassUI.get_glass_button("üå°Ô∏è ÿØŸÖÿß", "unit_temperature", emoji="üí´"),
                GlassUI.get_glass_button("üì¶ ÿ≠ÿ¨ŸÖ", "unit_volume", emoji="üåü")
            ],
            [
                GlassUI.get_glass_button("üìê ŸÖÿ≥ÿßÿ≠ÿ™", "unit_area", emoji="üí•"),
                GlassUI.get_glass_button("‚è∞ ÿ≤ŸÖÿßŸÜ", "unit_time", emoji="üîÆ")
            ],
            [
                GlassUI.get_glass_button("üí® ÿ≥ÿ±ÿπÿ™", "unit_speed", emoji="‚ú®"),
                GlassUI.get_glass_button("üíæ ÿØÿßÿØŸá", "unit_data", emoji="üí´")
            ],
            [
                GlassUI.get_glass_button("üîô ÿ®ÿßÿ≤⁄Øÿ¥ÿ™", "back_to_main", emoji="üîô")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def get_price_glass_keyboard() -> InlineKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ŸÇ€åŸÖÿ™‚Äå⁄Øÿ∞ÿßÿ±€å ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        keyboard = [
            [
                GlassUI.get_glass_button("üí∞ ÿßÿ±ÿ≤Ÿáÿß€å ÿØ€åÿ¨€åÿ™ÿßŸÑ (USD)", "price_crypto_usd", emoji="üíé"),
                GlassUI.get_glass_button("üåê ÿßÿ±ÿ≤Ÿáÿß€å ÿØ€åÿ¨€åÿ™ÿßŸÑ (IRR)", "price_crypto_irr", emoji="üîÆ")
            ],
            [
                GlassUI.get_glass_button("üè¶ ÿØÿßÿ±ÿß€å€å‚ÄåŸáÿß (TGJU)", "price_tgju", emoji="‚ú®"),
                GlassUI.get_glass_button("üìä ŸáŸÖŸá ŸÇ€åŸÖÿ™‚ÄåŸáÿß", "price_all", emoji="üí´")
            ],
            [
                GlassUI.get_glass_button("üìà ÿ≥ŸáÿßŸÖ", "stock_price", emoji="üåü"),
                GlassUI.get_glass_button("ü•á ⁄©ÿßŸÑÿß", "commodity_price", emoji="üí•")
            ],
            [
                GlassUI.get_glass_button("üèÜ ÿ®ÿ±ÿ™ÿ±€åŸÜ ÿßÿ±ÿ≤Ÿáÿß", "top_crypto", emoji="üîÆ"),
                GlassUI.get_glass_button("üìã ŸÑ€åÿ≥ÿ™ ÿßÿ±ÿ≤Ÿáÿß", "crypto_list", emoji="‚ú®")
            ],
            [
                GlassUI.get_glass_button("üìà ŸÜŸÖŸàÿØÿßÿ± ŸÇ€åŸÖÿ™", "price_chart", emoji="üí´"),
                GlassUI.get_glass_button("üö® Ÿáÿ¥ÿØÿßÿ± ŸÇ€åŸÖÿ™", "price_alert", emoji="üåü")
            ],
            [
                GlassUI.get_glass_button("üîô ÿ®ÿßÿ≤⁄Øÿ¥ÿ™", "back_to_main", emoji="üîô")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def get_admin_glass_keyboard() -> InlineKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ŸÖÿØ€åÿ±€åÿ™ ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        keyboard = [
            [
                GlassUI.get_glass_button("üìä ÿ¢ŸÖÿßÿ± ÿ±ÿ®ÿßÿ™", "admin_stats", emoji="üëë"),
                GlassUI.get_glass_button("üë• ⁄©ÿßÿ±ÿ®ÿ±ÿßŸÜ", "admin_users", emoji="üíé")
            ],
            [
                GlassUI.get_glass_button("üì¢ ÿßÿ±ÿ≥ÿßŸÑ Ÿæ€åÿßŸÖ", "admin_broadcast", emoji="üîÆ"),
                GlassUI.get_glass_button("üîß ÿ™ŸÜÿ∏€åŸÖÿßÿ™", "admin_settings", emoji="‚ú®")
            ],
            [
                GlassUI.get_glass_button("üö® Ÿáÿ¥ÿØÿßÿ±Ÿáÿß", "admin_alerts", emoji="üí´"),
                GlassUI.get_glass_button("üìã ŸÑÿß⁄Ø‚ÄåŸáÿß", "admin_logs", emoji="üåü")
            ],
            [
                GlassUI.get_glass_button("üõ†Ô∏è ÿ™ÿπŸÖ€åÿ±ÿßÿ™", "admin_maintenance", emoji="üí•"),
                GlassUI.get_glass_button("üíæ ⁄©ÿ¥", "admin_cache", emoji="üîÆ")
            ],
            [
                GlassUI.get_glass_button("üîô ÿ®ÿßÿ≤⁄Øÿ¥ÿ™", "back_to_main", emoji="üîô")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def get_settings_glass_keyboard() -> InlineKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ÿ™ŸÜÿ∏€åŸÖÿßÿ™ ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        keyboard = [
            [
                GlassUI.get_glass_button("üåç ÿ≤ÿ®ÿßŸÜ", "set_language", emoji="üîÆ"),
                GlassUI.get_glass_button("üå°Ô∏è Ÿàÿßÿ≠ÿØ ÿØŸÖÿß", "set_temperature_unit", emoji="‚ú®")
            ],
            [
                GlassUI.get_glass_button("üìè Ÿàÿßÿ≠ÿØ ÿ∑ŸàŸÑ", "set_length_unit", emoji="üí´"),
                GlassUI.get_glass_button("üí∞ ÿßÿ±ÿ≤ Ÿæ€åÿ¥‚ÄåŸÅÿ±ÿ∂", "set_default_currency", emoji="üåü")
            ],
            [
                GlassUI.get_glass_button("üîî ÿßÿπŸÑÿßŸÜ‚ÄåŸáÿß", "notification_settings", emoji="üí•"),
                GlassUI.get_glass_button("üìä ÿ≠ÿ±€åŸÖ ÿÆÿµŸàÿµ€å", "privacy_settings", emoji="üîÆ")
            ],
            [
                GlassUI.get_glass_button("üé® ÿ™ŸÖ", "theme_settings", emoji="‚ú®"),
                GlassUI.get_glass_button("‚ö° ÿπŸÖŸÑ⁄©ÿ±ÿØ", "performance_settings", emoji="üí´")
            ],
            [
                GlassUI.get_glass_button("üîô ÿ®ÿßÿ≤⁄Øÿ¥ÿ™", "back_to_main", emoji="üîô")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def get_confirmation_glass_keyboard(action: str) -> InlineKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ÿ™ÿ£€å€åÿØ ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        keyboard = [
            [
                GlassUI.get_glass_button("‚úÖ ÿ™ÿ£€å€åÿØ", f"confirm_{action}", emoji="‚úÖ"),
                GlassUI.get_glass_button("‚ùå ŸÑÿ∫Ÿà", f"cancel_{action}", emoji="‚ùå")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def get_back_to_main_keyboard() -> InlineKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ŸÅŸÇÿ∑ ÿ®ÿß ÿØ⁄©ŸÖŸá ÿ®ÿßÿ≤⁄Øÿ¥ÿ™ ÿ®Ÿá ŸÖŸÜŸà€å ÿßÿµŸÑ€å"""
        keyboard = [
            [
                GlassUI.get_glass_button("üîô ÿ®ÿßÿ≤⁄Øÿ¥ÿ™ ÿ®Ÿá ŸÖŸÜŸà€å ÿßÿµŸÑ€å", "back_to_main", emoji="üîô")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def get_pagination_glass_keyboard(current_page: int, total_pages: int, 
                                    callback_prefix: str) -> InlineKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ÿµŸÅÿ≠Ÿá‚Äåÿ®ŸÜÿØ€å ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        keyboard = []
        
        # ÿØ⁄©ŸÖŸá‚ÄåŸáÿß€å ŸÜÿßŸàÿ®ÿ±€å
        nav_buttons = []
        if current_page > 1:
            nav_buttons.append(GlassUI.get_glass_button("‚¨ÖÔ∏è ŸÇÿ®ŸÑ€å", 
                                                      f"{callback_prefix}_page_{current_page-1}", emoji="‚¨ÖÔ∏è"))
        
        nav_buttons.append(GlassUI.get_glass_button(f"{current_page}/{total_pages}", 
                                                   "page_info", emoji="‚ÑπÔ∏è"))
        
        if current_page < total_pages:
            nav_buttons.append(GlassUI.get_glass_button("ÿ®ÿπÿØ€å ‚û°Ô∏è", 
                                                      f"{callback_prefix}_page_{current_page+1}", emoji="‚û°Ô∏è"))
        
        keyboard.append(nav_buttons)
        
        # ÿ¥ŸÖÿßÿ±Ÿá ÿµŸÅÿ≠ÿßÿ™ (ÿß⁄Øÿ± ÿ≤€åÿßÿØ ŸÜÿ®ÿßÿ¥ÿØ)
        if total_pages <= 10:
            page_buttons = []
            for page in range(1, total_pages + 1):
                if page == current_page:
                    page_buttons.append(GlassUI.get_glass_button(f"‚Ä¢{page}‚Ä¢", 
                                                               "current_page", emoji="üîÆ"))
                else:
                    page_buttons.append(GlassUI.get_glass_button(str(page), 
                                                               f"{callback_prefix}_page_{page}", emoji="‚ú®"))
            
            # ÿ™ŸÇÿ≥€åŸÖ ÿ®Ÿá ÿ±ÿØ€åŸÅ‚ÄåŸáÿß€å 5 ÿ™ÿß€å€å
            for i in range(0, len(page_buttons), 5):
                keyboard.append(page_buttons[i:i+5])
        
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def get_quick_glass_keyboard() -> ReplyKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ÿ≥ÿ±€åÿπ ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        keyboard = [
            [
                KeyboardButton("üíé ÿßÿ±ÿ≤"), KeyboardButton("üîÆ Ÿàÿßÿ≠ÿØ"), KeyboardButton("‚ú® ÿ™ÿßÿ±€åÿÆ")
            ],
            [
                KeyboardButton("üí´ ŸÇ€åŸÖÿ™"), KeyboardButton("üåå ŸáŸàÿß"), KeyboardButton("üßø ÿ≠ÿ≥ÿßÿ®")
            ],
            [
                KeyboardButton("üîÆ ÿ™ÿ±ÿ¨ŸÖŸá"), KeyboardButton("‚ö° ÿ™ŸÜÿ∏€åŸÖÿßÿ™"), KeyboardButton("üåü ÿ¢ŸÖÿßÿ±")
            ],
            [
                KeyboardButton("üîÑ ÿ¥ÿ±Ÿàÿπ ŸÖÿ¨ÿØÿØ")
            ]
        ]
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=False)

    @staticmethod
    def get_quick_keyboard_with_webapp() -> ReplyKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ÿ≥ÿ±€åÿπ ÿ®ÿß ÿØ⁄©ŸÖŸá ŸÖ€åŸÜ€å‚ÄåÿßŸæ ÿ®ÿ±ÿß€å ŸÜŸÖÿß€åÿ¥ ⁄©ŸÜÿßÿ± ŸÜŸàÿßÿ± ÿ™ÿß€åŸæ"""
        keyboard = [
            [
                KeyboardButton("üöÄ ŸÖ€åŸÜ€å‚ÄåÿßŸæ", web_app=WebAppInfo(url="https://bot-nine-ochre.vercel.app/"))
            ],
            [
                KeyboardButton("üíé ÿßÿ±ÿ≤"), KeyboardButton("üîÆ Ÿàÿßÿ≠ÿØ"), KeyboardButton("‚ú® ÿ™ÿßÿ±€åÿÆ")
            ],
            [
                KeyboardButton("üí´ ŸÇ€åŸÖÿ™"), KeyboardButton("üåå ŸáŸàÿß"), KeyboardButton("üßø ÿ≠ÿ≥ÿßÿ®")
            ],
            [
                KeyboardButton("üîÑ ÿ¥ÿ±Ÿàÿπ ŸÖÿ¨ÿØÿØ")
            ]
        ]
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=False)
    
    @staticmethod
    def get_language_selection_glass_keyboard() -> InlineKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ÿßŸÜÿ™ÿÆÿßÿ® ÿ≤ÿ®ÿßŸÜ ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        keyboard = [
            [
                GlassUI.get_glass_button("üáÆüá∑ ŸÅÿßÿ±ÿ≥€å", "lang_fa", emoji="üîÆ"),
                GlassUI.get_glass_button("üá∫üá∏ English", "lang_en", emoji="‚ú®")
            ],
            [
                GlassUI.get_glass_button("üá∏üá¶ ÿßŸÑÿπÿ±ÿ®Ÿäÿ©", "lang_ar", emoji="üí´"),
                GlassUI.get_glass_button("üá®üá≥ ‰∏≠Êñá", "lang_zh", emoji="üåü")
            ],
            [
                GlassUI.get_glass_button("üá™üá∏ Espa√±ol", "lang_es", emoji="üí•"),
                GlassUI.get_glass_button("üá´üá∑ Fran√ßais", "lang_fr", emoji="üîÆ")
            ],
            [
                GlassUI.get_glass_button("üîô ÿ®ÿßÿ≤⁄Øÿ¥ÿ™", "back_to_settings", emoji="üîô")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def get_theme_selection_glass_keyboard() -> InlineKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ÿßŸÜÿ™ÿÆÿßÿ® ÿ™ŸÖ ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        keyboard = [
            [
                GlassUI.get_glass_button("üíé ÿ¥€åÿ¥Ÿá‚Äåÿß€å ⁄©ŸÑÿßÿ≥€å⁄©", "theme_classic_glass", emoji="üíé"),
                GlassUI.get_glass_button("üîÆ ÿ¥€åÿ¥Ÿá‚Äåÿß€å ŸÖÿØÿ±ŸÜ", "theme_modern_glass", emoji="üîÆ")
            ],
            [
                GlassUI.get_glass_button("‚ú® ÿ¥€åÿ¥Ÿá‚Äåÿß€å ŸÜÿ¶ŸàŸÜ", "theme_neon_glass", emoji="‚ú®"),
                GlassUI.get_glass_button("üí´ ÿ¥€åÿ¥Ÿá‚Äåÿß€å ÿ™ÿßÿ±€å⁄©", "theme_dark_glass", emoji="üí´")
            ],
            [
                GlassUI.get_glass_button("üåü ÿ¥€åÿ¥Ÿá‚Äåÿß€å ÿ∑ŸÑÿß€å€å", "theme_golden_glass", emoji="üåü"),
                GlassUI.get_glass_button("üí• ÿ¥€åÿ¥Ÿá‚Äåÿß€å ÿ±ŸÜ⁄Ø€åŸÜ‚Äå⁄©ŸÖÿßŸÜ", "theme_rainbow_glass", emoji="üí•")
            ],
            [
                GlassUI.get_glass_button("üîô ÿ®ÿßÿ≤⁄Øÿ¥ÿ™", "back_to_settings", emoji="üîô")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def format_glass_welcome_message() -> str:
        """Ÿæ€åÿßŸÖ ÿÆŸàÿ¥‚Äåÿ¢ŸÖÿØ⁄ØŸà€å€å ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        return """
üåü ÿ®Ÿá ÿØŸÜ€åÿß€å ÿ¨ÿßÿØŸà€å€å ÿ™ÿ®ÿØ€åŸÑ‚ÄåŸáÿß ÿÆŸàÿ¥ ÿ¢ŸÖÿØ€åÿØ! üåü
‚ú® ÿ™ÿ®ÿØ€åŸÑÿßÿõ Ÿæ€åÿ¥ÿ±ŸÅÿ™Ÿá‚Äåÿ™ÿ±€åŸÜ ÿ±ÿ®ÿßÿ™ ÿ¥€åÿ¥Ÿá‚Äåÿß€å ÿ®ÿ±ÿß€å Ÿáÿ± ÿ¢ŸÜ⁄ÜŸá ⁄©Ÿá ÿ®Ÿá ŸÅ⁄©ÿ±ÿ¥ ÿ®ÿ±ÿ≥€å!

üíé ÿßÿ®ÿ± ŸÇÿßÿ®ŸÑ€åÿ™‚ÄåŸáÿß:
‚Ä¢ üí∞ ÿ™ÿ®ÿØ€åŸÑ ÿ≠ÿ±ŸÅŸá‚Äåÿß€å ÿßÿ±ÿ≤ Ÿà ÿ±ŸÖÿ≤ÿßÿ±ÿ≤ ÿ®ÿß ŸÇ€åŸÖÿ™ ŸÑÿ≠ÿ∏Ÿá‚Äåÿß€å
‚Ä¢ üìè ÿ™ÿ®ÿØ€åŸÑ ÿßŸÜŸàÿßÿπ Ÿàÿßÿ≠ÿØŸáÿß ‚Äî ÿßÿ≤ ŸÖÿ™ÿ± Ÿà ⁄©€åŸÑŸà ⁄Øÿ±ŸÅÿ™Ÿá ÿ™ÿß ÿ®€åÿ™ Ÿà ÿ®ÿß€åÿ™
‚Ä¢ üìÖ ÿ™ÿ®ÿØ€åŸÑ ÿ™ÿßÿ±€åÿÆ Ÿà ÿ™ŸÇŸà€åŸÖ (ÿ¥ŸÖÿ≥€åÿå ŸÖ€åŸÑÿßÿØ€åÿå ŸÇŸÖÿ±€å)
‚Ä¢ üìà ŸÜŸÖÿß€åÿ¥ ŸÇ€åŸÖÿ™ ÿ≤ŸÜÿØŸá ÿ≥ŸáÿßŸÖÿå ÿ∑ŸÑÿßÿå ÿ≥⁄©Ÿá Ÿà ⁄©ÿßŸÑÿß
‚Ä¢ ‚òÅÔ∏è ÿ¢ÿ® Ÿà ŸáŸàÿß Ÿà Ÿæ€åÿ¥‚Äåÿ®€åŸÜ€å ŸáŸàÿ¥ŸÖŸÜÿØ ÿ±Ÿàÿ≤Ÿáÿß€å ÿ¢€åŸÜÿØŸá
‚Ä¢ üî¢ ŸÖÿßÿ¥€åŸÜ‚Äåÿ≠ÿ≥ÿßÿ® Ÿæ€åÿ¥ÿ±ŸÅÿ™Ÿá ÿ®ÿß ÿ™ÿ¥ÿÆ€åÿµ ÿÆŸàÿØ⁄©ÿßÿ± ÿπŸÖŸÑ€åÿßÿ™
‚Ä¢ üåç ÿ™ÿ±ÿ¨ŸÖŸá ÿ≥ÿ±€åÿπ Ÿà ÿ±ŸàÿßŸÜ ŸÖÿ™ŸÜ ÿ®Ÿá ÿ≤ÿ®ÿßŸÜ‚ÄåŸáÿß€å ŸÖÿÆÿ™ŸÑŸÅ
‚Ä¢ üö® ÿßÿπŸÑÿßŸÜ‚ÄåŸáÿßÿå Ÿáÿ¥ÿØÿßÿ±Ÿáÿß Ÿà €åÿßÿØÿ¢Ÿàÿ±€å‚ÄåŸáÿß€å ŸáŸàÿ¥ŸÖŸÜÿØ

üöÄ ÿ¥ÿ±Ÿàÿπ ÿ¨ÿßÿØŸà€å ÿ¥ŸÖÿß:
ÿ±Ÿà€å ÿØ⁄©ŸÖŸá‚ÄåŸáÿß€å ÿ¥€åÿ¥Ÿá‚Äåÿß€å Ÿæÿß€å€åŸÜ ÿ®ÿ≤ŸÜ€åÿØ €åÿß Ÿáÿ± ŸÖÿ™ŸÜ/ÿ≥ŸàÿßŸÑ€å ÿ±Ÿà ÿ®ŸÅÿ±ÿ≥ÿ™€åÿØ‚Ä¶
ŸÖŸÜ ÿÆŸàÿØŸÖ ŸÖ€å‚ÄåŸÅŸáŸÖŸÖ ⁄Ü€å ŸÖ€å‚ÄåÿÆŸàÿß€åÿØ! üòè
        """

    @staticmethod
    def get_tools_glass_keyboard() -> InlineKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ÿßÿ®ÿ≤ÿßÿ±Ÿáÿß€å ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        keyboard = [
            [
                GlassUI.get_glass_button("üíé ÿßÿ±ÿ≤", "currency_menu", emoji="üíé"),
                GlassUI.get_glass_button("üîÆ Ÿàÿßÿ≠ÿØ", "unit_menu", emoji="üîÆ")
            ],
            [
                GlassUI.get_glass_button("‚ú® ÿ™ÿßÿ±€åÿÆ", "date_menu", emoji="‚ú®"),
                GlassUI.get_glass_button("üí´ ŸÇ€åŸÖÿ™", "price_menu", emoji="üí´")
            ],
            [
                GlassUI.get_glass_button("üåå ŸáŸàÿß", "weather_menu", emoji="üåå"),
                GlassUI.get_glass_button("üßø ÿ≠ÿ≥ÿßÿ®", "calculator_menu", emoji="üßø")
            ],
            [
                GlassUI.get_glass_button("üîÆ ÿ™ÿ±ÿ¨ŸÖŸá", "translate_menu", emoji="üîÆ"),
                GlassUI.get_glass_button("‚ö° ÿ™ŸÜÿ∏€åŸÖÿßÿ™", "settings_menu", emoji="‚ö°")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_price_submenu_keyboard() -> InlineKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ÿ≤€åÿ±ŸÖŸÜŸà€å ŸÇ€åŸÖÿ™‚Äå⁄Øÿ∞ÿßÿ±€å"""
        keyboard = [
            [
                GlassUI.get_glass_button("‚Çø ÿ®€åÿ™ ⁄©Ÿà€åŸÜ", "price_bitcoin", emoji="‚Çø"),
                GlassUI.get_glass_button("ü•á ÿ∑ŸÑÿß€å 18 ÿπ€åÿßÿ±", "price_gold_18k", emoji="ü•á")
            ],
            [
                GlassUI.get_glass_button("ü•à ŸÜŸÇÿ±Ÿá", "price_silver", emoji="ü•à"),
                GlassUI.get_glass_button("üíé ÿßŸÜÿ≥ ÿ∑ŸÑÿß", "price_gold_ounce", emoji="üíé")
            ],
            [
                GlassUI.get_glass_button("üí∞ ÿßÿ±ÿ≤Ÿáÿß€å ÿØ€åÿ¨€åÿ™ÿßŸÑ", "price_crypto_menu", emoji="üí∞"),
                GlassUI.get_glass_button("üìà ÿ≥ŸáÿßŸÖ", "price_stocks", emoji="üìà")
            ],
            [
                GlassUI.get_glass_button("üè¶ ÿØÿßÿ±ÿß€å€å‚ÄåŸáÿß (TGJU)", "price_tgju", emoji="üè¶"),
                GlassUI.get_glass_button("üìä ŸáŸÖŸá ŸÇ€åŸÖÿ™‚ÄåŸáÿß", "price_all", emoji="üìä")
            ],
            [
                GlassUI.get_glass_button("üîô ÿ®ÿßÿ≤⁄Øÿ¥ÿ™ ÿ®Ÿá ŸÖŸÜŸà", "back_to_main", emoji="üîô")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_currency_submenu_keyboard() -> InlineKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ÿ≤€åÿ±ŸÖŸÜŸà€å ÿßÿ±ÿ≤"""
        keyboard = [
            [
                GlassUI.get_glass_button("üíµ ÿØŸÑÿßÿ± ÿ¢ŸÖÿ±€å⁄©ÿß", "currency_usd", emoji="üíµ"),
                GlassUI.get_glass_button("üí∂ €åŸàÿ±Ÿà", "currency_eur", emoji="üí∂")
            ],
            [
                GlassUI.get_glass_button("üí∑ ŸæŸàŸÜÿØ ÿßŸÜ⁄ØŸÑ€åÿ≥", "currency_gbp", emoji="üí∑"),
                GlassUI.get_glass_button("üí¥ €åŸÜ ⁄òÿßŸæŸÜ", "currency_jpy", emoji="üí¥")
            ],
            [
                GlassUI.get_glass_button("‚Çø ÿ®€åÿ™ ⁄©Ÿà€åŸÜ", "currency_btc", emoji="‚Çø"),
                GlassUI.get_glass_button("Œû ÿßÿ™ÿ±€åŸàŸÖ", "currency_eth", emoji="Œû")
            ],
            [
                GlassUI.get_glass_button("üí± ÿ™ÿ®ÿØ€åŸÑ ÿßÿ±ÿ≤", "currency_convert", emoji="üí±"),
                GlassUI.get_glass_button("üìà ŸÜÿ±ÿÆ ÿßÿ±ÿ≤", "exchange_rates", emoji="üìà")
            ],
            [
                GlassUI.get_glass_button("üîô ÿ®ÿßÿ≤⁄Øÿ¥ÿ™ ÿ®Ÿá ŸÖŸÜŸà", "back_to_main", emoji="üîô")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_date_submenu_keyboard() -> InlineKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ÿ≤€åÿ±ŸÖŸÜŸà€å ÿ™ÿßÿ±€åÿÆ"""
        keyboard = [
            [
                GlassUI.get_glass_button("üìÖ ÿßŸÖÿ±Ÿàÿ≤", "date_today", emoji="üìÖ"),
                GlassUI.get_glass_button("üìÜ ÿß€åŸÜ ŸÖÿßŸá", "date_this_month", emoji="üìÜ")
            ],
            [
                GlassUI.get_glass_button("üóìÔ∏è ÿ™ŸÇŸà€åŸÖ ÿ¥ŸÖÿ≥€å", "calendar_persian", emoji="üóìÔ∏è"),
                GlassUI.get_glass_button("üìÖ ÿ™ŸÇŸà€åŸÖ ŸÖ€åŸÑÿßÿØ€å", "calendar_gregorian", emoji="üìÖ")
            ],
            [
                GlassUI.get_glass_button("üåô ÿ™ŸÇŸà€åŸÖ ŸÇŸÖÿ±€å", "calendar_hijri", emoji="üåô"),
                GlassUI.get_glass_button("‚è∞ ÿ≥ÿßÿπÿ™ ÿ¨ŸáÿßŸÜ€å", "world_time", emoji="‚è∞")
            ],
            [
                GlassUI.get_glass_button("üîô ÿ®ÿßÿ≤⁄Øÿ¥ÿ™ ÿ®Ÿá ŸÖŸÜŸà", "back_to_main", emoji="üîô")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_unit_submenu_keyboard() -> InlineKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ÿ≤€åÿ±ŸÖŸÜŸà€å Ÿàÿßÿ≠ÿØ"""
        keyboard = [
            [
                GlassUI.get_glass_button("üìè ÿ∑ŸàŸÑ", "unit_length", emoji="üìè"),
                GlassUI.get_glass_button("‚öñÔ∏è Ÿàÿ≤ŸÜ", "unit_weight", emoji="‚öñÔ∏è")
            ],
            [
                GlassUI.get_glass_button("üå°Ô∏è ÿØŸÖÿß", "unit_temperature", emoji="üå°Ô∏è"),
                GlassUI.get_glass_button("üì¶ ÿ≠ÿ¨ŸÖ", "unit_volume", emoji="üì¶")
            ],
            [
                GlassUI.get_glass_button("üìê ŸÖÿ≥ÿßÿ≠ÿ™", "unit_area", emoji="üìê"),
                GlassUI.get_glass_button("‚è∞ ÿ≤ŸÖÿßŸÜ", "unit_time", emoji="‚è∞")
            ],
            [
                GlassUI.get_glass_button("üí® ÿ≥ÿ±ÿπÿ™", "unit_speed", emoji="üí®"),
                GlassUI.get_glass_button("üíæ ÿØÿßÿØŸá", "unit_data", emoji="üíæ")
            ],
            [
                GlassUI.get_glass_button("üîô ÿ®ÿßÿ≤⁄Øÿ¥ÿ™ ÿ®Ÿá ŸÖŸÜŸà", "back_to_main", emoji="üîô")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_feedback_glass_keyboard() -> InlineKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ÿ¥€åÿ¥Ÿá‚Äåÿß€å Ÿæ€åÿ¥ŸÜŸáÿßÿØÿßÿ™ Ÿà ⁄Øÿ≤ÿßÿ±ÿ¥ ÿÆÿ±ÿßÿ®€å"""
        keyboard = [
            [
                GlassUI.get_glass_button("Ÿæ€åÿ¥ŸÜŸáÿßÿØÿßÿ™ Ÿà ÿßŸÜÿ™ŸÇÿßÿØÿßÿ™", "feedback", emoji="üìù"),
                GlassUI.get_glass_button("⁄Øÿ≤ÿßÿ±ÿ¥ ÿÆÿ±ÿßÿ®€å", "report_bug", emoji="üêû")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def format_glass_help_message() -> str:
        """Ÿæ€åÿßŸÖ ÿ±ÿßŸáŸÜŸÖÿß ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        return """
ü§ñ **ÿ±ÿßŸáŸÜŸÖÿß€å ÿ±ÿ®ÿßÿ™ ÿ™ÿ®ÿØ€åŸÑÿß** üíé

üîß **ÿØÿ≥ÿ™Ÿàÿ±ÿßÿ™ ÿßÿµŸÑ€å:**
‚Ä¢ `/start` - ÿ¥ÿ±Ÿàÿπ ÿ±ÿ®ÿßÿ™
‚Ä¢ `/help` - ÿ±ÿßŸáŸÜŸÖÿß
‚Ä¢ `/menu` - ŸÖŸÜŸà€å ÿßÿµŸÑ€å
‚Ä¢ `/settings` - ÿ™ŸÜÿ∏€åŸÖÿßÿ™
‚Ä¢ `/admin` - ŸæŸÜŸÑ ŸÖÿØ€åÿ±€åÿ™ (ŸÅŸÇÿ∑ ÿßÿØŸÖ€åŸÜ)

üíé **ÿ™ÿ®ÿØ€åŸÑ ÿßÿ±ÿ≤:**
‚Ä¢ ŸÖÿ´ÿßŸÑ: `100 USD to IRR`
‚Ä¢ Ÿæÿ¥ÿ™€åÿ®ÿßŸÜ€å ÿßÿ≤ ÿßÿ±ÿ≤Ÿáÿß€å ÿØ€åÿ¨€åÿ™ÿßŸÑ
‚Ä¢ ŸÜÿ±ÿÆ ŸÑÿ≠ÿ∏Ÿá‚Äåÿß€å

üîÆ **ÿ™ÿ®ÿØ€åŸÑ Ÿàÿßÿ≠ÿØ:**
‚Ä¢ ÿ∑ŸàŸÑ: `10 km to mile`
‚Ä¢ Ÿàÿ≤ŸÜ: `5 kg to lb`
‚Ä¢ ÿØŸÖÿß: `25 celsius to fahrenheit`
‚Ä¢ ÿ≠ÿ¨ŸÖÿå ŸÖÿ≥ÿßÿ≠ÿ™ÿå ÿ≤ŸÖÿßŸÜ Ÿà...

‚ú® **ÿ™ÿ®ÿØ€åŸÑ ÿ™ÿßÿ±€åÿÆ:**
‚Ä¢ ŸÖÿ´ÿßŸÑ: `2024-01-15`
‚Ä¢ ÿ™ŸÇŸà€åŸÖ ÿ¥ŸÖÿ≥€åÿå ŸÇŸÖÿ±€åÿå ŸÖ€åŸÑÿßÿØ€å
‚Ä¢ ŸÖŸÜÿ∑ŸÇŸá ÿ≤ŸÖÿßŸÜ€å

üí´ **ŸÇ€åŸÖÿ™ ŸÑÿ≠ÿ∏Ÿá‚Äåÿß€å:**
‚Ä¢ ÿ≥ŸáÿßŸÖÿå ÿßÿ±ÿ≤ ÿØ€åÿ¨€åÿ™ÿßŸÑÿå ⁄©ÿßŸÑÿß
‚Ä¢ ŸÖÿ´ÿßŸÑ: `BTC`, `AAPL`, `GOLD`

üåå **ÿ¢ÿ® Ÿà ŸáŸàÿß:**
‚Ä¢ ÿ¢ÿ® Ÿà ŸáŸàÿß€å ŸÅÿπŸÑ€å
‚Ä¢ Ÿæ€åÿ¥‚Äåÿ®€åŸÜ€å 5 ÿ±Ÿàÿ≤Ÿá

üßø **ŸÖÿßÿ¥€åŸÜ ÿ≠ÿ≥ÿßÿ®:**
‚Ä¢ ÿ™Ÿàÿßÿ®ÿπ ÿπŸÑŸÖ€å
‚Ä¢ ÿ¢ŸÖÿßÿ± Ÿà ŸÖÿ≠ÿßÿ≥ÿ®ÿßÿ™ Ÿæ€åÿ¥ÿ±ŸÅÿ™Ÿá

üîÆ **ÿ™ÿ±ÿ¨ŸÖŸá:**
‚Ä¢ ÿ™ÿ±ÿ¨ŸÖŸá ŸÖÿ™ŸÜ
‚Ä¢ ÿ™ÿ¥ÿÆ€åÿµ ÿ≤ÿ®ÿßŸÜ

üí• **Ÿáÿ¥ÿØÿßÿ±Ÿáÿß:**
‚Ä¢ Ÿáÿ¥ÿØÿßÿ± ŸÇ€åŸÖÿ™
‚Ä¢ €åÿßÿØÿ¢Ÿàÿ±€å

ÿ®ÿ±ÿß€å ÿ¥ÿ±Ÿàÿπ `/start` ÿ±ÿß ÿ®ÿ≤ŸÜ€åÿØ! üöÄ
        """
    
    @staticmethod
    def get_glass_loading_message() -> str:
        """Ÿæ€åÿßŸÖ ÿ®ÿßÿ±⁄Øÿ∞ÿßÿ±€å ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        loading_emojis = ["‚è≥", "üîÑ", "‚ú®", "üí´", "üåü", "üîÆ", "üíé"]
        emoji = random.choice(loading_emojis)
        return f"{emoji} ÿØÿ± ÿ≠ÿßŸÑ Ÿæÿ±ÿØÿßÿ≤ÿ¥..."
    
    @staticmethod
    def get_glass_success_message(message: str) -> str:
        """Ÿæ€åÿßŸÖ ŸÖŸàŸÅŸÇ€åÿ™ ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        return f"‚úÖ {message} ‚ú®"
    
    @staticmethod
    def get_glass_error_message(message: str) -> str:
        """Ÿæ€åÿßŸÖ ÿÆÿ∑ÿß ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        return f"‚ùå {message} üö´"
    
    @staticmethod
    def get_glass_warning_message(message: str) -> str:
        """Ÿæ€åÿßŸÖ Ÿáÿ¥ÿØÿßÿ± ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        return f"‚ö†Ô∏è {message} üí•"
    
    @staticmethod
    def get_glass_info_message(message: str) -> str:
        """Ÿæ€åÿßŸÖ ÿßÿ∑ŸÑÿßÿπÿßÿ™ ÿ¥€åÿ¥Ÿá‚Äåÿß€å"""
        return f"‚ÑπÔ∏è {message} üí°"
    
    @staticmethod
    def get_permanent_reply_keyboard() -> ReplyKeyboardMarkup:
        """⁄©€åÿ®Ÿàÿ±ÿØ ÿØÿßÿ¶ŸÖ€å ÿ®ÿß ÿØŸà ÿØ⁄©ŸÖŸá - ŸÖ€åŸÜ€å‚ÄåÿßŸæ Ÿà ÿ¥ÿ±Ÿàÿπ ŸÖÿ¨ÿØÿØ"""
        keyboard = [
            [
                KeyboardButton("üöÄ ŸÖ€åŸÜ€å‚ÄåÿßŸæ", web_app=WebAppInfo(url="https://bot-nine-ochre.vercel.app/")),
                KeyboardButton("üîÑ ÿ¥ÿ±Ÿàÿπ ŸÖÿ¨ÿØÿØ")
            ]
        ]
        return ReplyKeyboardMarkup(
            keyboard, 
            resize_keyboard=True, 
            one_time_keyboard=False,  # False = ÿØÿßÿ¶ŸÖ€å
            input_field_placeholder="Ÿæ€åÿßŸÖ ÿÆŸàÿØ ÿ±ÿß ÿ®ŸÜŸà€åÿ≥€åÿØ..."
        )

